{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/DavidPapamichael/Coding/makers/week_13+/projects/hack_for_heroes/pocket_positivity_frontend/components/MoodInput.js\";\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Slider from \"react-native-web/dist/exports/Slider\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\n\nvar MoodInput = function MoodInput(props) {\n  var triggerNextStep = props.triggerNextStep;\n\n  var _useState = useState(5),\n      _useState2 = _slicedToArray(_useState, 2),\n      mood = _useState2[0],\n      setMood = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      shownValue = _useState4[0],\n      setShownValue = _useState4[1];\n\n  var _useState5 = useState('No comment this time'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      moodComment = _useState6[0],\n      setMoodComment = _useState6[1];\n\n  var _useState7 = useState('#2b396b'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      buttonColour = _useState8[0],\n      setButtonColour = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      buttonWasPressed = _useState10[0],\n      setButtonWasPressed = _useState10[1];\n\n  console.log('props', props);\n\n  var postMoodInput = function postMoodInput() {\n    var nextStep = mood >= 5 ? 'happy' : 'unhappy';\n    triggerNextStep(buttonWasPressed, nextStep);\n    console.log('success', 'anxious-someone-to-talk-to');\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      color: '#2b396b',\n      marginBottom: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Welcome Back!\"), React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      color: '#2b396b',\n      marginBottom: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"How are you Feeling?\"), React.createElement(Slider, {\n    margin: 20,\n    style: {\n      width: 250,\n      height: 40\n    },\n    value: 5.5,\n    handleColor: '#2b396b',\n    minimumValue: 1,\n    maximumValue: 10,\n    minimumTrackTintColor: \"#20bd3f\",\n    maximumTrackTintColor: \"#fa5534\",\n    onValueChange: function onValueChange(shownValue) {\n      setShownValue(shownValue);\n      setMood(shownValue);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.moodNumber,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, Math.floor(mood)), React.createElement(TextInput, {\n    style: styles.comment,\n    multiline: true,\n    fontSize: 20,\n    placeholder: \"Any reasons or comments\",\n    onChangeText: function onChangeText(moodComment) {\n      setMoodComment(moodComment);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    style: styles.button,\n    title: \"Log Mood\",\n    color: buttonColour,\n    onPress: function onPress() {\n      postMoodInput();\n      setButtonColour('#780e80');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '15%',\n    backgroundColor: '#fff'\n  },\n  title: {\n    width: '100%',\n    fontSize: 30,\n    textAlign: 'center'\n  },\n  scrollView: {\n    backgroundColor: 'red'\n  },\n  instructions: {\n    textAlign: 'center'\n  },\n  comment: {\n    textAlign: 'center',\n    borderRadius: 20,\n    width: 250,\n    height: 50,\n    borderColor: 'grey',\n    borderWidth: 1\n  },\n  moodNumber: {\n    margin: 10\n  },\n  button: {\n    padding: 20\n  }\n});\nexport default MoodInput;","map":{"version":3,"sources":["/Users/DavidPapamichael/Coding/makers/week_13+/projects/hack_for_heroes/pocket_positivity_frontend/components/MoodInput.js"],"names":["axios","React","useState","useEffect","MoodInput","props","triggerNextStep","mood","setMood","shownValue","setShownValue","moodComment","setMoodComment","buttonColour","setButtonColour","buttonWasPressed","setButtonWasPressed","console","log","postMoodInput","nextStep","styles","container","fontSize","color","marginBottom","width","height","moodNumber","Math","floor","comment","button","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","title","textAlign","scrollView","instructions","borderRadius","borderColor","borderWidth","margin","padding"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport {\n  Text,\n  View,\n  Slider,\n  StyleSheet,\n  Button,\n  TextInput,\n} from 'react-native';\n\nconst MoodInput = (props) => {\n  const { triggerNextStep } = props;\n\n  const [mood, setMood] = useState(5);\n  const [shownValue, setShownValue] = useState();\n  const [moodComment, setMoodComment] = useState('No comment this time');\n  const [buttonColour, setButtonColour] = useState('#2b396b');\n  const [buttonWasPressed, setButtonWasPressed] = useState(false);\n  console.log('props', props);\n\n  const postMoodInput = () => {\n    // axios\n    //   .post('https://help-for-heroes.herokuapp.com/scores/2', {\n    //     score: mood,\n    //     comment: moodComment,\n    //   })\n    //   .catch((error) => {\n    //     alert('Please try again later');\n    //     console.error(error);\n    //   });\n    let nextStep = mood >= 5 ? 'happy' : 'unhappy';\n    triggerNextStep(buttonWasPressed, nextStep);\n    console.log('success', 'anxious-someone-to-talk-to');\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={{ fontSize: 20, color: '#2b396b', marginBottom: 5 }}>\n        Welcome Back!\n      </Text>\n      <Text style={{ fontSize: 20, color: '#2b396b', marginBottom: 30 }}>\n        How are you Feeling?\n      </Text>\n      <Slider\n        margin={20}\n        style={{ width: 250, height: 40 }}\n        value={5.5}\n        handleColor={'#2b396b'}\n        minimumValue={1}\n        maximumValue={10}\n        minimumTrackTintColor=\"#20bd3f\"\n        maximumTrackTintColor=\"#fa5534\"\n        onValueChange={(shownValue) => {\n          setShownValue(shownValue);\n          setMood(shownValue);\n        }}\n      />\n      <Text style={styles.moodNumber}>{Math.floor(mood)}</Text>\n      <TextInput\n        style={styles.comment}\n        multiline={true}\n        fontSize={20}\n        placeholder=\"Any reasons or comments\"\n        onChangeText={(moodComment) => {\n          setMoodComment(moodComment);\n        }}\n      />\n      <Button\n        style={styles.button}\n        title=\"Log Mood\"\n        color={buttonColour}\n        onPress={() => {\n          postMoodInput();\n          setButtonColour('#780e80');\n        }}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '15%',\n    // paddingVertical: 20,\n    backgroundColor: '#fff',\n  },\n  title: {\n    width: '100%',\n    fontSize: 30,\n    textAlign: 'center',\n  },\n  scrollView: {\n    backgroundColor: 'red',\n  },\n  instructions: {\n    textAlign: 'center',\n    // color: 'powderpink',\n  },\n  comment: {\n    // margin: 20,\n    textAlign: 'center',\n    borderRadius: 20,\n    width: 250,\n    height: 50,\n    borderColor: 'grey',\n    borderWidth: 1,\n  },\n  moodNumber: {\n    margin: 10,\n  },\n  button: {\n    // paddingVertical: 20,\n    padding: 20,\n  },\n});\n\nexport default MoodInput;\n"]},"metadata":{},"sourceType":"module"}
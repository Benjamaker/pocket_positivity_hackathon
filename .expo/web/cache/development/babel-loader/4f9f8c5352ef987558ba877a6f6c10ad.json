{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/DavidPapamichael/Coding/makers/week_13+/projects/hack_for_heroes/pocket_positivity_frontend/screens/MantrasScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as WebBrowser from 'expo-web-browser';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card, Title, TextInput } from 'react-native-paper';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport NewMantra from \"../components/Forms/NewMantra\";\nimport Mantras from \"../components/Mantras\";\n\nvar MantrasScreen = function MantrasScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      mantras = _useState2[0],\n      setMantras = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formInput = _useState4[0],\n      setFormInput = _useState4[1];\n\n  var getMantras = function getMantras() {\n    axios.get('https://help-for-heroes.herokuapp.com/mantras').then(function (response) {\n      return setMantras(response.data);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  useEffect(function () {\n    getMantras();\n  }, []);\n\n  var postMantra = function postMantra() {\n    axios.post('https://help-for-heroes.herokuapp.com/mantras/1', {\n      mantra: formInput\n    }).catch(function (error) {\n      alert('Please try again later');\n      console.error(error);\n    });\n  };\n\n  var handleSubmit = function handleSubmit() {\n    postMantra();\n    getMantras();\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.flatList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    label: \"Enter a new Mantra...\",\n    value: formInput,\n    onChangeText: function onChangeText(formInput) {\n      return setFormInput(formInput);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    onPress: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Submit\")), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, mantras.map(function (mantra) {\n    return React.createElement(Card, {\n      key: mantra.mantra_id,\n      style: styles.mantraContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, React.createElement(Title, {\n      children: mantra.mantra,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    })));\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  card: {\n    marginHorizontal: 20,\n    height: 20,\n    justifyContent: 'center',\n    padding: 5\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: 'rgba(0,0,0,0.4)',\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center'\n  },\n  contentContainer: {\n    paddingTop: 30\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: 'contain',\n    marginTop: 3,\n    marginLeft: -10\n  },\n  mantraContainer: {\n    alignItems: 'center',\n    marginHorizontal: 0\n  },\n  homeScreenFilename: {\n    marginVertical: 7\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)'\n  },\n  codeHighlightContainer: {\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 3,\n    paddingHorizontal: 4\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 24,\n    textAlign: 'center'\n  },\n  tabBarInfoContainer: _objectSpread(_objectSpread({\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0\n  }, Platform.select({\n    ios: {\n      shadowColor: 'black',\n      shadowOffset: {\n        width: 0,\n        height: -3\n      },\n      shadowOpacity: 0.1,\n      shadowRadius: 3\n    },\n    android: {\n      elevation: 20\n    }\n  })), {}, {\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20\n  }),\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center'\n  },\n  navigationFilename: {\n    marginTop: 5\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: 'center'\n  },\n  helpLink: {\n    paddingVertical: 15\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: '#2e78b7'\n  }\n});\nexport default MantrasScreen;","map":{"version":3,"sources":["/Users/DavidPapamichael/Coding/makers/week_13+/projects/hack_for_heroes/pocket_positivity_frontend/screens/MantrasScreen.js"],"names":["WebBrowser","axios","React","useState","useEffect","Button","Card","Title","TextInput","ScrollView","NewMantra","Mantras","MantrasScreen","mantras","setMantras","formInput","setFormInput","getMantras","get","then","response","data","catch","error","console","postMantra","post","mantra","alert","handleSubmit","styles","container","flatList","map","mantra_id","mantraContainer","StyleSheet","create","flex","backgroundColor","card","marginHorizontal","height","justifyContent","padding","developmentModeText","marginBottom","color","fontSize","lineHeight","textAlign","contentContainer","paddingTop","welcomeContainer","alignItems","marginTop","welcomeImage","width","resizeMode","marginLeft","homeScreenFilename","marginVertical","codeHighlightText","codeHighlightContainer","borderRadius","paddingHorizontal","getStartedText","tabBarInfoContainer","position","bottom","left","right","Platform","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation","paddingVertical","tabBarInfoText","navigationFilename","helpContainer","helpLink","helpLinkText"],"mappings":"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","sourcesContent":["import * as WebBrowser from 'expo-web-browser';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card, Title, TextInput } from 'react-native-paper';\n\nimport {\n  Image,\n  Platform,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from 'react-native';\n\nimport { ScrollView } from 'react-native-gesture-handler';\n\nimport NewMantra from '../components/Forms/NewMantra';\nimport Mantras from '../components/Mantras';\n\nconst MantrasScreen = () => {\n  const [mantras, setMantras] = useState([]);\n  const [formInput, setFormInput] = useState('');\n\n  const getMantras = () => {\n    axios\n      .get('https://help-for-heroes.herokuapp.com/mantras')\n      .then((response) => setMantras(response.data))\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  useEffect(() => {\n    getMantras();\n  }, []);\n\n  const postMantra = () => {\n    axios\n      .post('https://help-for-heroes.herokuapp.com/mantras/1', {\n        mantra: formInput,\n      })\n      .catch((error) => {\n        alert('Please try again later');\n        console.error(error);\n      });\n    // .then((response) => setMantras(response.data));\n  };\n\n  const handleSubmit = () => {\n    postMantra();\n    getMantras();\n  };\n\n  return (\n    <View style={styles.container}>\n      <ScrollView\n        style={styles.flatList}\n        // contentContainerStyle={styles.contentContainer}\n      >\n        <View>\n          <TextInput\n            label=\"Enter a new Mantra...\"\n            value={formInput}\n            onChangeText={(formInput) => setFormInput(formInput)}\n          />\n          <Button onPress={handleSubmit}>Submit</Button>\n        </View>\n        <View>\n          {mantras.map((mantra) => {\n            return (\n              <Card key={mantra.mantra_id} style={styles.mantraContainer}>\n                <Card.Content>\n                  <Title children={mantra.mantra} />\n                </Card.Content>\n              </Card>\n            );\n          })}\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  card: {\n    marginHorizontal: 20,\n    height: 20,\n    justifyContent: 'center',\n    padding: 5,\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: 'rgba(0,0,0,0.4)',\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center',\n  },\n  contentContainer: {\n    paddingTop: 30,\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: 'contain',\n    marginTop: 3,\n    marginLeft: -10,\n  },\n  mantraContainer: {\n    alignItems: 'center',\n    marginHorizontal: 0,\n  },\n  homeScreenFilename: {\n    marginVertical: 7,\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)',\n  },\n  codeHighlightContainer: {\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 24,\n    textAlign: 'center',\n  },\n  tabBarInfoContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: -3 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3,\n      },\n      android: {\n        elevation: 20,\n      },\n    }),\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20,\n  },\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center',\n  },\n  navigationFilename: {\n    marginTop: 5,\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\nexport default MantrasScreen;\n"]},"metadata":{},"sourceType":"module"}